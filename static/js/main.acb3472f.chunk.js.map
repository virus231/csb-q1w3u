{"version":3,"sources":["redux/reducers/repos.reducer.js","redux/selectors.js","pages/Main.js","utils/pagesCreator.js","redux/actions/repos.actions.js","App.js","redux/store.js","index.js"],"names":["SET_REPOS","SET_IS_FETCHING","SET_CURRENT_PAGE","defaultState","items","isFetching","currentPage","perPage","totalCount","setRepos","repos","type","payload","setIsFetching","bool","state","Main","React","useState","searchValue","dispatch","useDispatch","useSelector","reposSelector","pages","pagesCount","i","push","createPages","Math","ceil","useEffect","searchQuery","a","axios","get","response","data","getRepos","map","item","index","name","page","onClick","setCurrentPage","App","className","path","component","rootReducer","combineReducers","action","total_count","store","createStore","composeWithDevTools","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.acb3472f.chunk.js","sourcesContent":["const SET_REPOS = \"SET_REPOS\";\nconst SET_IS_FETCHING = \"SET_IS_FETCHING\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\n\nconst defaultState = {\n  items: [],\n  isFetching: true,\n  currentPage: 1,\n  perPage: 10,\n  totalCount: 0\n};\n\nexport default function reposReducer(state = defaultState, action) {\n  switch (action.type) {\n    case SET_REPOS:\n      return {\n        ...state,\n        items: action.payload.items,\n        totalCount: action.payload.total_count,\n        isFetching: false\n      };\n    case SET_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.payload\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setRepos = (repos) => ({ type: SET_REPOS, payload: repos });\nexport const setIsFetching = (bool) => ({\n  type: SET_IS_FETCHING,\n  payload: bool\n});\nexport const setCurrentPage = (page) => ({\n  type: SET_CURRENT_PAGE,\n  payload: page\n});\n","export const repos = (state) => state.repos.items;\nexport const currentPage = (state) => state.repos.currentPage;\nexport const perPage = (state) => state.repos.perPage;\nexport const isFetching = (state) => state.repos.isFetching;\nexport const totalCount = (state) => state.repos.totalCount;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRepos } from \"../redux/actions/repos.actions\";\nimport { setCurrentPage } from \"../redux/reducers/repos.reducer\";\nimport * as reposSelector from \"../redux/selectors\";\nimport { createPages } from \"../utils/pagesCreator\";\n\nexport const Main = () => {\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const items = useSelector(reposSelector.repos);\n  const currentPage = useSelector(reposSelector.currentPage);\n  const perPage = useSelector(reposSelector.perPage);\n  const isFetching = useSelector(reposSelector.isFetching);\n  const totalCount = useSelector(reposSelector.totalCount);\n  const pagesCount = Math.ceil(totalCount / perPage);\n\n  const pages = [];\n  createPages(pages, pagesCount, currentPage);\n\n  React.useEffect(() => {\n    dispatch(getRepos(searchValue, currentPage, perPage));\n  }, [dispatch, currentPage, perPage]);\n\n  return (\n    <div>\n      <ul>\n        {isFetching ? (\n          <p>Loading</p>\n        ) : (\n          items.map((item, index) => <li key={index}>{item.name}</li>)\n        )}\n      </ul>\n      <div>\n        {pages.map((page, index) => (\n          <span onClick={() => dispatch(setCurrentPage(page))} key={index}>\n            {page}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n};\n","export function createPages(pages, pagesCount, currentPage) {\n  if (pagesCount > 10) {\n    if (currentPage > 5) {\n      for (let i = currentPage - 4; i <= currentPage + 5; i++) {\n        pages.push(i);\n        if (i == pagesCount) break;\n      }\n    } else {\n      for (let i = 1; i <= 10; i++) {\n        pages.push(i);\n        if (i == pagesCount) break;\n      }\n    }\n  } else {\n    for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i);\n    }\n  }\n}\n","import axios from \"axios\";\nimport { setIsFetching, setRepos } from \"../reducers/repos.reducer\";\n\nexport const getRepos = (searchQuery = \"stars:%3E1\", currentPage, perPage) => {\n  if (searchQuery == \"\") {\n    searchQuery = \"stars:%3E1\";\n  }\n  return async (dispatch) => {\n    dispatch(setIsFetching(true));\n    const response = await axios.get(\n      `https://api.github.com/search/repositories?q=${searchQuery}&sort=stars&per_page=${perPage}&page=${currentPage}`\n    );\n    dispatch(setRepos(response.data));\n  };\n};\n","import { BrowserRouter, Route } from \"react-router-dom\";\nimport { Main } from \"./pages/Main\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <Route path=\"/\" component={Main} />\n      </div>\n    </BrowserRouter>\n  );\n}\n","import { combineReducers } from \"redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reposReducer from \"../redux/reducers/repos.reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nconst rootReducer = combineReducers({\n  repos: reposReducer\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport { store } from \"./redux/store\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}